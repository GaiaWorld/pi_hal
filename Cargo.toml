[package]
name = "pi_hal"
version = "0.2.8"
edition = "2021"
authors = ["yineng <yineng@gmail.com>"]
description = "Front end cross platform packaging"
repository = "https://github.com/GaiaWorld/pi_hal.git"
license = "MIT OR Apache-2.0"
keywords = ["pi", "hal"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
bytemuck = { version = "1.4", features = [ "derive" ] }
pi_time = "0.5"
pi_wgpu = { version = "0.2", registry = "yn"}
ktx = "0.3"
# pi_share = {version="0.4", features=["serial"]}
smallvec = { version = "1.8", features = ["serde"] }
image = "0.25"
pi_assets = "0.15"
pi_atom = "0.6"
pi_share = "0.5"
pi-async-rt = "0.2"
# pi-async-rt = {version="0.1", features=["serial"]}
pi_futures = "0.1"
pi_hash = "0.1"
pi_slotmap = {version= "0.2", features = ["serde"]}
pi_ucd="0.1"
pi_null="0.1"
ordered-float="3.9"
# 回滚到0.30, 0.31安卓pi_app 编不过
nalgebra = "0.32"
lazy_static = "1.4"
num_cpus = "1.16"
log = "0.4"
serde = { version = "1.0", features = ["derive"] }
derive_deref = "1.1"
async-trait = "0.1"
parking_lot = "0.12"
ahash = "0.8"
buddy-alloc = "0.5"
parry2d = "0.13"
guillotiere = { version = "0.6" }
bitcode = {version= "0.6", features = [ "serde" ]}
# bincode = "1.3"
naga = "0.19"
unicode-segmentation = "1.10"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
web-sys = {version = "0.3", features = [
	"HtmlCanvasElement",
	"CanvasRenderingContext2d",
	"Document", 
	"Window",
	"ImageData"
]}
js-sys = "0.3"
getrandom = {version = "0.3", features = ["wasm_js"]}
# basis-universal = { path = "F:/project/rust_crates/basis-universal"}


[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# font_kit = { registry = "yn", version = "0.2" }
pi_sdf = {version = "0.1", registry = "yn"}

[features]
empty=[]
single_thread = [] # 本地平台，设置该feature有效，运行时为单线程运行时
web_local_load = []

[patch.yn]
# pi_sdf = {path="../pi_sdf"}
# pi_wgpu = {path="../pi_wgpu"}

[patch.crates-io]
# pi_share = {path="../pi_share"}


